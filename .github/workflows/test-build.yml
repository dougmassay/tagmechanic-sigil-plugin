# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Test and Build Tagmechanic plugin

on:
  push:
    tags:
      - 'v*'
    branches:
      - master
  pull_request:
    branches:
      - master
env:
  PLUGIN_NAME: "TagMechanic"

jobs:
  build:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Get tag name
      if: startswith( github.ref, 'refs/tags/')
      id: get_tag_name
      run: echo ::set-output name=TAGNAME::${GITHUB_REF/refs\/tags\//}

    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8
        pip install PyQt5==5.12.3
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Lint with flake8
      run: |
        flake8 buildplugin
        flake8 .

    - name: Update language files
      run: |
        pylupdate5 -verbose -translate-function _t *.py -ts ./translations/template.ts
        pylupdate5 -verbose -translate-function _t *.py -ts ./translations/tagmechanic_pl.ts
  
    - name: Commit any language TS files updated
      uses: stefanzweifel/git-auto-commit-action@v4
      with:
        commit_user_name: GitHub Actions Bot
        commit_user_email: actions-bot@example.org
        commit_author: Doug Massay <dougmassay@users.noreply.github.com>
        commit_message: Update TS files with 5.12 lupdate

    - name: Cache Qt
      id: cache-qt
      uses: actions/cache@v2
      with:
        path: ${{runner.workspace}}/Qt
        key: ${{ runner.os }}-qttools-${{ hashFiles('**/reset-caches.txt') }}
  
    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        version: '5.12.3'
        dir: ${{runner.workspace}}/Qt
        setup-python: 'false'
        cached: ${{ steps.cache-qt.outputs.cache-hit }}

    - name: Build Plugin
      run: |
        which lrelease
        python buildplugin --language

    - name: Upload Artifact
      if: "contains(github.event.head_commit.message, '[deploy]')"
      uses: actions/upload-artifact@v2
      with:
        name: tagmech-artifact
        path: ./*.zip
        retention-days: 3

    - name: Create Release
      if: startswith( github.ref, 'refs/tags/')
      uses: ncipollo/release-action@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        name: ${{ env.PLUGIN_NAME }} ${{ steps.get_tag_name.outputs.TAGNAME }}
        body: |
          Changes in this Release
          - First Change
          - Second Change
        draft: true
        prerelease: false
        artifacts: './*.zip'
